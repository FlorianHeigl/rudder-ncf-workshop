# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu14_04"

  config.vm.hostname = "ubuntu14.04"

  config.vm.define "ubuntu14_04" do |ubuntu14_04|
  end
  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.define :cfengine do |cfengine_config|
    cfengine_config.vm.network :forwarded_port, guest: 8080, host: 8083
    cfengine_config.vm.provider :virtualbox do |vb|
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "1024"]
    end

    cfengine_config.vm.provision "cfengine" do |cf|
      cf.am_policy_hub = true
    end
  end

  config.vm.define :ncf do |ncf_config|
    ncf_config.vm.network :forwarded_port, guest: 8080, host: 8082
    ncf_config.vm.provider :virtualbox do |vb|
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "1024"]
    end

    ncf_config.vm.provision :shell, :path => "provision/ncf.sh"
  end

  # Rudder boxes definition
  # Rudder server
  config.vm.define :rudder do |rudder_config|
    rudder_config.vm.network :forwarded_port, guest: 80, host: 8080
    rudder_config.vm.network :forwarded_port, guest: 443, host: 8081
    rudder_config.vm.box = "debian-7.0-amd64-minimal"
    rudder_config.vm.box_url = "https://www.dropbox.com/s/gxouugzbnjlny1k/debian-7.0-amd64-minimal.box"

    rudder_config.vm.provider :virtualbox do |vb|
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "1536"]
    end
    rudder_config.vm.network :private_network, ip: "192.168.30.10"
    rudder_config.vm.hostname = "server"
    rudder_config.vm.provision :shell, :path => "provision/server_rudder.sh"
  end

  # Rudder node
  config.vm.define :node do |node_config|
    node_config.vm.network :forwarded_port, guest: 8080 , host: 8181
    node_config.vm.box = "debian-7.0-amd64-minimal"
    node_config.vm.box_url = "https://www.dropbox.com/s/gxouugzbnjlny1k/debian-7.0-amd64-minimal.box"
    node_config.vm.hostname = "node"

    node_config.vm.provider :virtualbox do |vb|
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "1024"]
    end

    node_config.vm.network :private_network, ip: "192.168.30.11"

    node_config.vm.provision :shell, :path => "provision/node_rudder.sh"
  end

  # Create a prvate network, whch allows host-only access to the machine

# Bridge_ networks make the ne appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #config.vm.provider :virtualbox do |vb|
  #  # Use VBoxManage to customize the VM. For example to change memory:
  #  vb.customize ["modifyvm", :id, "--memory", "1536"]
  #end

  #config.vm.provision :shell, :path => "provision/cfengine.sh"


  #config.vm.provision "cfengine" do |cf|
  #  cf.am_policy_hub = true
  #end

  #
  # View the documentation for the provider you're using for more
  # information on available options.


end
